import random
import matplotlib.pyplot as plt
import numpy as np

# Mock function to simulate fetching current weather data for a location
def fetch_current_weather(location):
    # Simulate fetching weather data
    weather_conditions = ["Sunny", "Cloudy", "Rainy", "Windy", "Stormy"]
    weather_data = {
        "temperature": random.uniform(10, 30),  # Celsius
        "humidity": random.uniform(20, 80),     # Percent
        "condition": random.choice(weather_conditions)
    }
    return weather_data

# Function to analyze the impact of weather on air quality and provide visualizations
def weather_impact_analysis(location, current_aqi):
    weather = fetch_current_weather(location)
    condition = weather["condition"]
    temperature = weather["temperature"]
    humidity = weather["humidity"]
    
    print(f"Current Weather in {location}:")
    print(f"Condition: {condition}")
    print(f"Temperature: {temperature:.1f} °C")
    print(f"Humidity: {humidity:.1f}%")
    
    analysis = ""
    
    if condition in ["Sunny", "Windy"]:
        analysis += "Sunny and windy conditions generally help disperse pollutants, leading to better air quality.\n"
    elif condition in ["Cloudy", "Rainy"]:
        analysis += "Cloudy and rainy conditions can help wash away pollutants, temporarily improving air quality.\n"
    else:
        analysis += "Stormy conditions can stir up dust and other pollutants, potentially worsening air quality.\n"
    
    if temperature > 25:
        analysis += "High temperatures can increase the concentration of ground-level ozone, negatively impacting air quality.\n"
    
    if humidity > 60:
        analysis += "High humidity can lead to the formation of secondary pollutants, such as particulate matter, worsening air quality.\n"
    
    if not analysis:
        analysis = "Weather conditions are neutral regarding their impact on air quality."

    print("\nWeather Impact Analysis on Air Quality:")
    print(analysis)

    labels = ['Temperature (°C)', 'Humidity (%)', 'AQI']
    values = [temperature, humidity, current_aqi]
    colors = ['red' if temperature > 25 else 'blue', 'red' if humidity > 60 else 'blue', 'green' if current_aqi <= 50 else 'yellow' if current_aqi <= 100 else 'orange' if current_aqi <= 150 else 'red']

    fig, ax = plt.subplots()
    bars = ax.bar(labels, values, color=colors)

    for bar in bars:
        height = bar.get_height()
        ax.annotate('{}'.format(round(height, 1)),
                    xy=(bar.get_x() + bar.get_width() / 2, height),
                    xytext=(0, 3),  # 3 points vertical offset
                    textcoords="offset points",
                    ha='center', va='bottom')

    ax.set_title(f'Weather Impact on Air Quality in {location}')
    ax.set_ylim(0, 100)
    plt.show()

location = "San Francisco"
current_aqi = 75  # Example AQI value
weather_impact_analysis(location, current_aqi)
