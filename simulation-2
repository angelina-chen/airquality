import datetime
import requests
import matplotlib.pyplot as plt

class ClimateSimulator:
    def __init__(self, zip_code, api_key):
        self.zip_code = zip_code
        self.api_key = api_key
        self.data = []
    
    def fetch_current_weather(self):
        """Fetch current weather data from OpenWeatherMap API."""
        url = f"http://api.openweathermap.org/data/2.5/weather?zip={self.zip_code}&appid={self.api_key}&units=metric"
        response = requests.get(url)
        
        if response.status_code == 200:
            data = response.json()
            temperature = data['main']['temp']
            humidity = data['main']['humidity']
            precipitation = data['rain']['1h'] if 'rain' in data and '1h' in data['rain'] else 0
            wind_speed = data['wind']['speed']
            return temperature, humidity, precipitation, wind_speed
        else:
            print(f"Error fetching weather data: {response.status_code}")
            return None
    
    def generate_data(self, start_date, end_date):
        """Generate simulated climate data for a given time period."""
        current_date = start_date
        while current_date <= end_date:
            # Fetch current weather data
            weather_data = self.fetch_current_weather()
            
            if weather_data:
                temperature, humidity, precipitation, wind_speed = weather_data
                self.data.append({
                    'date': current_date,
                    'temperature': temperature,
                    'humidity': humidity,
                    'precipitation': precipitation,
                    'wind_speed': wind_speed
                })
            
            # Move to the next day
            current_date += datetime.timedelta(days=1)
    
    def plot_data(self):
        """Plot the simulated climate data."""
        dates = [data['date'] for data in self.data]
        temperatures = [data['temperature'] for data in self.data]
        humidities = [data['humidity'] for data in self.data]
        precipitations = [data['precipitation'] for data in self.data]
        wind_speeds = [data['wind_speed'] for data in self.data]
        
        plt.figure(figsize=(12, 8))
        
        plt.subplot(2, 2, 1)
        plt.plot(dates, temperatures, marker='o', linestyle='-', color='r')
        plt.title('Temperature (Celsius)')
        plt.xlabel('Date')
        plt.ylabel('Temperature (Celsius)')
        
        plt.subplot(2, 2, 2)
        plt.plot(dates, humidities, marker='o', linestyle='-', color='g')
        plt.title('Humidity (%)')
        plt.xlabel('Date')
        plt.ylabel('Humidity (%)')
        
        plt.subplot(2, 2, 3)
        plt.plot(dates, precipitations, marker='o', linestyle='-', color='b')
        plt.title('Precipitation (mm)')
        plt.xlabel('Date')
        plt.ylabel('Precipitation (mm)')
        
        plt.subplot(2, 2, 4)
        plt.plot(dates, wind_speeds, marker='o', linestyle='-', color='m')
        plt.title('Wind Speed (km/h)')
        plt.xlabel('Date')
        plt.ylabel('Wind Speed (km/h)')
        
        plt.tight_layout()
        plt.show()

if __name__ == "__main__":
    zip_code = "94040"  # Replace with the user's zip code
    api_key = "your_openweathermap_api_key"  # Replace with your API key
    
    simulator = ClimateSimulator(zip_code, api_key)
    
    # Generate simulated data for the last 30 days
    start_date = datetime.datetime.now() - datetime.timedelta(days=30)
    end_date = datetime.datetime.now()
    simulator.generate_data(start_date, end_date)
    
    # Plot the simulated climate data
    simulator.plot_data()
