import random
import matplotlib.pyplot as plt
import numpy as np

# Mock function to simulate fetching current weather data for a location
def fetch_current_weather(location):
    weather_conditions = ["Sunny", "Cloudy", "Rainy", "Windy", "Stormy"]
    weather_data = {
        "temperature": random.uniform(10, 30),  # Celsius
        "humidity": random.uniform(20, 80),     # Percent
        "condition": random.choice(weather_conditions)
    }
    return weather_data

# Mock function to simulate fetching historical weather data for a location
def fetch_historical_weather(location):
    weather_conditions = ["Sunny", "Cloudy", "Rainy", "Windy", "Stormy"]
    data = []
    for _ in range(30):
        data.append({
            "temperature": random.uniform(10, 30),
            "humidity": random.uniform(20, 80),
            "condition": random.choice(weather_conditions)
        })
    return data

def weather_impact_analysis(location, current_aqi):
    weather = fetch_current_weather(location)
    historical_weather = fetch_historical_weather(location)

    condition = weather["condition"]
    temperature = weather["temperature"]
    humidity = weather["humidity"]
    
    print(f"Current Weather in {location}:")
    print(f"Condition: {condition}")
    print(f"Temperature: {temperature:.1f} °C")
    print(f"Humidity: {humidity:.1f}%")
    
    analysis = ""
    
    if condition in ["Sunny", "Windy"]:
        analysis += "Sunny and windy conditions generally help disperse pollutants, leading to better air quality.\n"
    elif condition in ["Cloudy", "Rainy"]:
        analysis += "Cloudy and rainy conditions can help wash away pollutants, temporarily improving air quality.\n"
    else:
        analysis += "Stormy conditions can stir up dust and other pollutants, potentially worsening air quality.\n"
    
    if temperature > 25:
        analysis += "High temperatures can increase the concentration of ground-level ozone, negatively impacting air quality.\n"
    
    if humidity > 60:
        analysis += "High humidity can lead to the formation of secondary pollutants, such as particulate matter, worsening air quality.\n"
    
    if not analysis:
        analysis = "Weather conditions are neutral regarding their impact on air quality."

    print("\nWeather Impact Analysis on Air Quality:")
    print(analysis)

    labels = ['Temperature (°C)', 'Humidity (%)', 'AQI']
    values = [temperature, humidity, current_aqi]
    colors = ['red' if temperature > 25 else 'blue', 'red' if humidity > 60 else 'blue', 'green' if current_aqi <= 50 else 'yellow' if current_aqi <= 100 else 'orange' if current_aqi <= 150 else 'red']

    fig, axs = plt.subplots(2, 2, figsize=(15, 10))
